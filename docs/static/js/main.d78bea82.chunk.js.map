{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","value","setValue","onSubmit","e","preventDefault","trim","length","cats","type","onChange","target","GifGridItem","title","url","id","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","setTimeout","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"uMAuBeA,EApBY,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACtBC,mBAAS,IADa,mBACzCC,EADyC,KAClCC,EADkC,KAWhD,OACE,0BAAMC,SANa,SAACC,GACpBA,EAAEC,iBACEJ,EAAMK,OAAOC,OAAS,GAAGR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAAqBO,SAK9D,2BAAOC,KAAK,OAAOR,MAAOA,EAAOS,SAVjB,SAACN,GACnBF,EAASE,EAAEO,OAAOV,YCIPW,EATY,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAWC,GAAU,EAAdC,GAAc,EAAVD,KACvC,OACE,yBAAKE,UAAU,0CACb,yBAAKC,IAAKH,EAAKI,IAAKL,IACpB,2BAAIA,K,uBCNGM,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfP,EADe,iDACiCQ,UACpDF,GAFmB,+DAIFG,MAAMT,GAJJ,cAIfU,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLd,GAAIc,EAAId,GACRF,MAAOgB,EAAIhB,MACXC,IAAG,UAAEe,EAAIC,cAAN,aAAE,EAAYC,iBAAiBjB,QAVjB,kBAada,GAbc,4CAAH,sDCqBLK,EAjBQ,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdpB,mBAAS,CACjC0B,KAAM,GACNO,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OAXAC,YAAW,eACXC,qBAAU,WACRlB,EAAQC,GAAUkB,MAAK,SAACC,GACtBH,YAAW,WACTD,EAAS,CACPT,KAAMa,EACNN,SAAS,MAEV,WAEJ,CAACb,IACGc,EDd2BM,CAAapB,GAAvCa,EAD+B,EAC/BA,QAAeH,EADgB,EACtBJ,KAEjB,OACE,oCACE,wBAAIV,UAAU,qCAAqCI,GAClDa,GACC,uBAAGjB,UAAU,sCAAb,iBAEF,yBAAKA,UAAU,aACZc,EAAOF,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,iBAAiBA,EAAjB,CAAsBY,IAAKZ,EAAId,YEI1B2B,EAfM,WAAO,IAAD,EACW1C,mBAAS,IADpB,mBAClB2C,EADkB,KACN5C,EADM,KAEzB,OACE,oCACE,4CACA,6BACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,4BACG4C,EAAWf,KAAI,SAACR,GAAD,OACd,kBAAC,EAAD,CAASA,SAAUA,EAAUqB,IAAKrB,UCR5CwB,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.d78bea82.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport propTypes from \"prop-types\";\n\nexport const AddCategory = ({ setcategories }) => {\n  const [value, setValue] = useState(\"\");\n\n  const handleValue = (e) => {\n    setValue(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (value.trim().length > 0) setcategories((cats) => [value, ...cats]);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={value} onChange={handleValue} />\n    </form>\n  );\n};\nAddCategory.propTypes = {\n  setcategories: propTypes.func.isRequired,\n};\nexport default AddCategory;\n","import React from \"react\";\n\nexport const GifGridItem = ({ title, id, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n\nexport default GifGridItem;\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=YBDxqZaKFhj2nkSv3eE1XW8Hc0cZySxh`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n  return gifs;\n};\n","import React from \"react\";\nimport GifGridItem from \"./GifGridItem\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\n\nexport const GifGrid = ({ category }) => {\n  const { loading, data: images } = useFetchGifs(category);\n\n  return (\n    <>\n      <h2 className=\"animate__animated animate__fadeIn\">{category}</h2>\n      {loading && (\n        <p className=\"animate__animated animate__flipInX\">\"Cargando...\"</p>\n      )}\n      <div className=\"card_grid\">\n        {images.map((img) => (\n          <GifGridItem {...img} key={img.id} />\n        ))}\n      </div>\n    </>\n  );\n};\nexport default GifGrid;\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setstate] = useState({\n    data: [],\n    loading: true,\n  });\n  setTimeout(() => {});\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setTimeout(() => {\n        setstate({\n          data: imgs,\n          loading: false,\n        });\n      }, 1500);\n    });\n  }, [category]);\n  return state;\n};\n","import React, { useState } from \"react\";\nimport AddCategory from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\";\n\nconst GifExpertApp = () => {\n  const [categories, setcategories] = useState([]);\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <hr />\n      <AddCategory setcategories={setcategories} />\n      <ol>\n        {categories.map((category) => (\n          <GifGrid category={category} key={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\nexport default GifExpertApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport GifExpertApp from \"./GitExpertApp\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}